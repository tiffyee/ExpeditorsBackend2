spring.application.name=AdoptionSpringBootJPA
server.port=8081

logging.level.org.springframework.boot.autoconfigure=INFO
logging.level.org.springframework = INFO

#spring.profiles.active = dev
#spring.profiles.active = h2, prod
#spring.profiles.active = mysql, prod
spring.profiles.active = postgres, prod
#spring.profiles.active = jdbc
################################################################

#EntityManager hack.  Only for web environments.
# 'true' will keep the Transaction open for the entire
#request, which bypasses the LazyInstantionException, but
#may leave you open to the n + 1 select issue.
# 'false' will open and close the transaction at
# whatever boundaries you define with @Transactional.
#The default is 'true'.  'false' is better.
spring.jpa.open-in-view=false
#spring.jpa.open-in-view=true


#################Tell Hibernate to Not make Schema########
#Does Hibernate generate the DDL (false for no)
#If this is not set to false, Hibernate may overwrite
#the work of schema.sql and data.sql
spring.jpa.generate-ddl=true
#spring.jpa.generate-ddl=false
#If Hibernate, then a further switch is
# available to customize how Hibernate works
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=create
#################End Hibernate######################

###########################DB properties##############################
#If spring is going to initialize the databases, this
#property specifies the name of the sql files, e.g.
#for h2 they would be schema-h2.sql and
#data-h2.sql
#spring.datasource.platform=h2
#Note that sometime after version 2.6.6 the
# above property name has been changed to:
#spring.sql.init.platform=h2

#Moved to application-postgres.properties
#also have to turn this on for spring,
#Tell Spring not to create the database
#Choices are 'embedded' (the default),
#'always' and 'never'.
#Choose 'never' if Hibernate is making the schema
#spring.datasource.initialization-mode=embedded
#spring.datasource.initialization-mode=never
#Note that sometime after version 2.6.6 the
# above property name has been changed to:
#spring.sql.init.mode=always
spring.sql.init.mode=never

#properties to make hibernate show us what it's doing
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.highlight.sql=true

# Generate and log statistics
#spring.jpa.properties.hibernate.generate_statistics=true
# Log slow queries
#spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=3

#Show values of bound paramters
logging.level.org.hibernate.orm.jdbc.bind=trace
###########################End DB properties##############################

################################Naming Strategy####################################
#You can use PhysicalNamingStrategy to tell Hibernate to map properties
#to column names directly.  E.g phoneNumber maps to a column called PHONENUMBER.
#or phoneNumber, depending on the database.
#As opposed to the SpringPhysicalNamingStrategy where phoneNumber would map to phone_number
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
################################End Naming Strategy####################################
